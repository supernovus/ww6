#!/usr/bin/env perl6
#
# This is slightly more advanced than example.scgi. Now we're loading
# a Metadata plugin, parsing a configuration file, and having the
# Example plugin obtain it's configuration from the 'example' section
# in the configuration file.

BEGIN {
    @*INC.push: './lib';
    print "Initializing System... ";
}

use SCGI;
use Webtoo;
use Webtoo::Plugins;
use Websight::Example; ## We're using "static" plugins, so load it now.
use Websight::Metadata::PDDL; ## Use PDDL metadata.

my $port = 8118; ## SCGI port
my $datadir = './data'; ## The directory our data is stored in.
my $config  = 'example.wtdl'; ## Name of the configuration file, in datadir.

my $scgi = SCGI.new( :port($port), :strict ); ## Create an SCGI object.

## Now we're going to create a handler subroutine to handle page requests.
my $handler = sub (%env) {
    my $wt = Webtoo.new( :env(%env) ); ## Create a Webtoo object.
    $wt does Webtoo::Plugins; ## Add plugin support.
    $wt does Webtoo::Metadata::PDDL; ## Add PDDL metadata support.
    $wt.datadir = $datadir; ## Set the datadir, as per above.
    $wt.metadata.loadFile($config); ## Load the config file.
    my $example = Websight::Example.new(); ## Init the static plugin.
    $wt.callPlugin($example); ## Call the plugin. Config will be loaded.
    return $wt.processContent; ## Return processed content to web server.
}

say "done.";

$scgi.handle: $handler; ## Pass the handler to the SCGI object.

## End of script.

