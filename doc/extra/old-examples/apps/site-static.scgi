#!/usr/bin/env perl6
#
# This is slightly more advanced than the other two examples. 
# Now we're loading a Metadata plugin, parsing a configuration file, and the
# Example plugin is obtaining it's configuration from the 'example' section
# in the configuration file.

## NOTE: Since this got moved into examples, there is no site data for it
## anymore. The default daemons/templates are now built by the 'ww6' script.

BEGIN {
    @*INC.push: './lib';
    print "Initializing System... ";
}

use SCGI;
use Webtoo;
use Websight::Dispatch;
use Websight::Autoroot;
use Websight::Content;
use Websight::Metadata;
use Websight::Headers;
use Websight::Layout;

my $port = 8118; ## SCGI port
my $datadir = './data'; ## The directory our data is stored in.
my $config  = 'static-site-config.json'; ## Name of the configuration file, in datadir.

my $scgi = SCGI.new( :port($port), :strict ); ## Create an SCGI object.

## Now we're going to create a handler subroutine to handle page requests.
my $handler = sub (%env) {
    #say "Creating object";
    my $wt = Webtoo.new( 
        :env(%env), 
        :datadir($datadir),
    ); ## Create a Webtoo object, with metadata and datadir set.
    #$wt.metadata.debug = True;
    $wt.metadata.loadFile($config); ## Load the config file.
    $wt.metadata<plugins> = [
      Websight::Dispatch.new(),
      Websight::Autoroot.new(),
      Websight::Content.new(),
      Websight::Metadata.new(),
      Websight::Headers.new(),
      Websight::Layout.new(),
    ];
    #say "Processing plugins";
    $wt.processPlugins; ## Process plugins in the 'plugins' metadata array.
    #say "Processing content";
    return $wt.processContent; ## Return processed content to web server.
}

say "done.";

$scgi.handle: $handler; ## Pass the handler to the SCGI object.

## End of script.

